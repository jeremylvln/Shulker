name: release

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  preview:
    runs-on: ubuntu-latest

    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    env:
      IS_RELEASE: "false"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Import signing GPG key
        id: gpg-signing-key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Prepare Git boundaries for affected projects
        uses: nrwl/nx-set-shas@v4

      - name: Publish Docker images
        run: npx nx affected --target=docker --parallel 1 --output-style stream
        env:
          DOCKER_BUILD_PLATFORMS: linux/amd64,linux/arm64/v8

      - name: Publish Gradle snapshots
        run: ./gradlew publish
        env:
          ORG_GRADLE_PROJECT_signing.gnupg.keyName: "${{ steps.gpg-signing-key.outputs.keyid }}"
          ORG_GRADLE_PROJECT_signing.gnupg.passphrase: "${{ secrets.GPG_PASSPHRASE }}"
          ARTIFACTORY_USERNAME: "${{ secrets.ARTIFACTORY_USERNAME }}"
          ARTIFACTORY_PASSWORD: "${{ secrets.ARTIFACTORY_PASSWORD }}"

  release:
    runs-on: ubuntu-latest

    if: github.event_name == 'workflow_dispatch'

    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
      discussions: write

    env:
      IS_RELEASE: "true"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_GH_PAT }}

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: latest
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install additional packages
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Import signing GPG key
        id: gpg-signing-key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Release with semantic-release
        run: npx semantic-release
        env:
          HUSKY: "0"
          DOCKER_BUILD_PLATFORMS: linux/amd64,linux/arm64/v8
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_signing.gnupg.keyName: "${{ steps.gpg-signing-key.outputs.keyid }}"
          ORG_GRADLE_PROJECT_signing.gnupg.passphrase: "${{ secrets.GPG_PASSPHRASE }}"
          ARTIFACTORY_USERNAME: "${{ secrets.ARTIFACTORY_USERNAME }}"
          ARTIFACTORY_PASSWORD: "${{ secrets.ARTIFACTORY_PASSWORD }}"

      - name: Package Helm chart
        working-directory: kube/helm
        run: helm package .

      - name: Upload Helm chart as artifact
        uses: actions/upload-artifact@v4
        with:
          name: helm-chart-archive
          path: kube/helm/shulker-operator-*.tgz
          if-no-files-found: error
          retention-days: 1

  update-helm-repository:
    runs-on: ubuntu-latest
    needs: [release]

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: "gh-pages"
          token: ${{ secrets.RELEASE_GH_PAT }}

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: latest
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download built Helm chart
        uses: actions/download-artifact@v4
        with:
          name: helm-chart-archive
          path: helm-charts

      - name: Update Helm index
        working-directory: helm-charts
        run: helm repo index . --url https://shulker.jeremylvln.fr/helm-charts/

      - name: Push to GitHub Pages
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update Helm repository"
          file_pattern: "helm-charts/*"
