name: ci

on:
  pull_request:
  push:
    branches:
      - main

env:
  TARGET_NODE_VERSION: '20'
  TARGET_RUST_VERSION: 'stable'
  TARGET_JAVA_VERSION: '17'

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ env.TARGET_NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.TARGET_NODE_VERSION }}
          cache: npm

      - name: Use Rust ${{ env.TARGET_RUST_VERSION }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.TARGET_RUST_VERSION }}

      - name: Use Java ${{ env.TARGET_JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: ${{ env.TARGET_JAVA_VERSION }}
          cache: 'gradle'

      - name: Install Buf
        uses: bufbuild/buf-setup-action@v1

      - name: Install Node.js dependencies
        run: npm ci

      - name: Restore Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: . -> dist/rust

      - name: Install Rust dependencies
        run: cargo check

      - name: Prepare Git boundaries for affected projects
        uses: nrwl/nx-set-shas@v3

      - name: Run build
        run: npx nx affected --target=build --parallel=1

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ env.TARGET_NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.TARGET_NODE_VERSION }}
          cache: npm

      - name: Use Rust ${{ env.TARGET_RUST_VERSION }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.TARGET_RUST_VERSION }}

      - name: Use Java ${{ env.TARGET_JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: ${{ env.TARGET_JAVA_VERSION }}
          cache: 'gradle'

      - name: Install Buf
        uses: bufbuild/buf-setup-action@v1

      - name: Install Node.js dependencies
        run: npm ci

      - name: Restore Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: . -> dist/rust

      - name: Install Rust dependencies
        run: cargo install cargo-tarpaulin && cargo check

      - name: Prepare Git boundaries for affected projects
        uses: nrwl/nx-set-shas@v3

      - name: Run tests
        run: npx nx affected --target=test --parallel=1

      - name: Upload coverage reports to Codecov
        run: |
          curl -o codecov https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          CODECOV=$(pwd)/codecov bash scripts/upload_codecov_files.sh
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ env.TARGET_NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.TARGET_NODE_VERSION }}
          cache: npm

      - name: Use Rust ${{ env.TARGET_RUST_VERSION }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.TARGET_RUST_VERSION }}

      - name: Use Java ${{ env.TARGET_JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: ${{ env.TARGET_JAVA_VERSION }}
          cache: 'gradle'

      - name: Install Buf
        uses: bufbuild/buf-setup-action@v1

      - name: Install Node.js dependencies
        run: npm ci

      - name: Restore Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: . -> dist/rust

      - name: Install Rust dependencies
        run: cargo check

      - name: Prepare Git boundaries for affected projects
        uses: nrwl/nx-set-shas@v3

      - name: Run lint
        run: npx nx affected --target=lint --parallel=1

  semantic:
    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request'

    steps:
      - name: Ensure semantic
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
