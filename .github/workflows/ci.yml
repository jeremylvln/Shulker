name: ci

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      dockerfile-changed: ${{ steps.file-changes.outputs.dockerfile == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Test if a Dockerfile changed
        uses: dorny/paths-filter@v2
        id: file-changes
        with:
          filters: |
            dockerfile:
              - 'packages/*/Dockerfile'

      - name: Prepare Git boundaries for affected projects
        uses: nrwl/nx-set-shas@v3

      - name: Run build
        run: npx nx affected --target=build --parallel=1

  build-docker:
    runs-on: ubuntu-latest
    needs: build

    if: ${{ needs.build.outputs.dockerfile-changed == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install tools
        uses: ./.github/actions/install-tools
        with:
          install-rust: false
          install-java: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare Git boundaries for affected projects
        uses: nrwl/nx-set-shas@v3

      - name: Run Docker build
        run: npx nx affected --target=docker --parallel=1

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Install Rust tools
        run: cargo binstall -y cargo-tarpaulin
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Prepare Git boundaries for affected projects
        uses: nrwl/nx-set-shas@v3

      - name: Run tests
        run: npx nx affected --target=test --parallel=1

      - name: Upload coverage reports to Codecov
        run: |
          curl -o codecov https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          CODECOV=$(pwd)/codecov bash scripts/upload_codecov_files.sh
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Prepare Git boundaries for affected projects
        uses: nrwl/nx-set-shas@v3

      - name: Run lint
        run: npx nx affected --target=lint --parallel=1

  quality:
    runs-on: ubuntu-latest
    needs: test

    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install tools
        uses: ./.github/actions/install-tools

      - name: Install Rust tools
        run: cargo binstall -y clippy-sarif sarif-fmt
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run clippy
        run: cargo clippy --all-features --message-format=json -- --deny warnings | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Run detekt
        run: ./gradlew detekt
        continue-on-error: true

      - name: Upload Clippy analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true

      - name: Upload Detekt analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: build/reports/detekt/merge.sarif
          wait-for-processing: true

  semantic:
    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request'

    steps:
      - name: Ensure semantic
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ github.token }}
